// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id          Int     @id @default(autoincrement())
  login       String? @unique
  firstName   String?
  lastName    String?
  phoneNumber String? @unique
  email       String? @unique
  orders      Order[]
  cart        Cart?
}

model Cart {
  id       Int            @id @default(autoincrement())
  client   Client         @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId Int            @unique
  goods    CartsOnGoods[]
}

model Good {
  id          Int             @id @default(autoincrement())
  name        String          @unique
  basePrice   Float
  ingredients Json?
  description String
  carts       CartsOnGoods[]
  orders      GoodsOnOrders[]
  goodsImages GoodsImage[]
}

model CartsOnGoods {
  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int
  good   Good @relation(fields: [goodId], references: [id])
  goodId Int

  @@id([cartId, goodId])
}

enum OrderStatuses {
  ISSUED
  PAID
  DELIVERY
  READY
  COMPLETED
}

model Order {
  id       Int             @id @default(autoincrement())
  client   Client          @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId Int
  status   OrderStatuses   @default(ISSUED)
  goods    GoodsOnOrders[]
}

model GoodsOnOrders {
  good    Good  @relation(fields: [goodId], references: [id])
  goodId  Int
  order   Order @relation(fields: [orderId], references: [id])
  orderId Int

  @@id([goodId, orderId])
}

model GoodsImage {
  id        Int      @id @default(autoincrement())
  good      Good     @relation(fields: [goodId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  goodId    Int
  link      String   @unique
  fileSize  Int
  createdAt DateTime @default(now())
}
